import re
import os
import sys

def parse_and_finetune_sampled_tasks(sample_log: str, device: str, line_no: int = 0):
    ''' Parse one line of the log generated by task sampling
        And finetune on the target device with the sampled tasks
    '''

    pattern = r"Selected (?P<task_num>\d+) tasks: "
    pattern += r"(?P<selected_id_str>\d+(,\d+)*) "
    pattern += r"\((?P<selected_task_name_str>\d+(,\d+)*)\) "
    pattern += r"using the '(?P<sample_method>\w+)' method, "
    pattern += r"with the diff2origin of (?P<cmd_diff>[-e\d.]+)"
    pattern += r"$"

    match = re.search(pattern, sample_log)
    if match is None:
        return
    
    rst = match.groupdict()

    if rst['sample_method'] != "random":
        return

    print(sample_log)
    SAMPLE_NUM=2308

    rst["task_num"] = int(rst["task_num"])
    rst['selected_task_name_str'] = rst['selected_task_name_str'].replace(',', '-')
    # mode = f"{device}:list-{rst['selected_task_name_str']}.by_device:train-{device}|{device}:sample{SAMPLE_NUM}}.by_device:test-{device}"
    mode = f"{device}:list-{rst['selected_task_name_str']}.by_device:train-{device}|{device}:sample{SAMPLE_NUM}}"
    pre_train_model_path = ".workspace/runs/cdpp_to_t4-pretrain-fix_batch_first_bug"
    finetune_cache_dir = f".workspace/runs/cdpp_to_{device}-finetune-{rst['sample_method']}_sample_{rst['task_num']}task-{line_no}"
    
    ### debug
    # finetune_cache_dir = f".workspace/runs/cdpp_to_{device}-finetune-test"
    # mode = f"{device}:sample{SAMPLE_NUM}}|{device}:sample{SAMPLE_NUM}}"

    ### Run finetuning
    cmd = f"bash scripts/train.sh run -y --mode sample200 -c tmp/search_trial_20221119_1575.yaml"

    cmd += f" -f 111"
    finetune_cache_dir += "-f_111"

    cmd += f" --load_cache -t {pre_train_model_path}"
    cmd += f" --finetune_cache_dir {finetune_cache_dir}"
    cmd += f" --finetune_datapath \"{mode}\""

    print(cmd)
    os.system(cmd)

    ### Remove temporary pre-processed data
    cmd = f"rm -r {finetune_cache_dir}/finetune_dataset*"
    os.system(cmd)

def parse_log_files(filepath, device, st=0, ed=None):
    with open(filepath, 'r') as fp:
        lines = fp.readlines()
    if ed is None:
        ed = len(lines)
    for line_no in range(st, ed):
        parse_and_finetune_sampled_tasks(lines[line_no], device, line_no)

if __name__ == "__main__":
    s = "Selected 3 tasks: 32,37,112 (32,37,116) using the 'random' method, with the diff2origin of 5.968378"
    s = "Selected 100 tasks: 82,83,84,85,86,88,90,94,98,99,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198 (82,84,85,86,88,92,94,98,102,103,106,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,189,190,193,194,196,197,198,199,201,203,204,205,206,208,209,210,211,212) using the 'kmeans' method, with the diff2origin of 0.000000"
    device = "t4"

    # parse_and_finetune_sampled_tasks(s, device)
    # raise

    # parse_and_finetune_sampled_tasks(s, device)
    st = int(sys.argv[1]) if len(sys.argv) > 1 else 5
    ed = int(sys.argv[2]) if len(sys.argv) > 2 else None
    parse_log_files(".workspace/cdpp_finetune/log.txt", "t4", st=st, ed=ed)