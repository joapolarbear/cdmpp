import os
import numpy as np
import math
import json

import matplotlib.pyplot as plt
import seaborn as sns
from tqdm import tqdm

from utils.util import fig_base
from utils.metrics import (
    metric_cmd,
    centroid_diff,
    metric_mape,
    metric_elementwise_mape,
    l2diff
)

Y = [0.00035, 0.001021, 0.002565, 0.000376, 0.002755, 0.031734, 0.001137, 0.018368, 0.005268, 0.000732, 0.010595, 0.000375, 0.000155, 0.000181, 0.004911, 0.004271, 0.001391, 0.000108, 0.000652, 0.000173, 0.000398, 0.002746, 0.001151, 0.000853, 0.00062, 0.00058, 0.007601, 0.000743, 0.002359, 0.003385, 0.01033, 0.021189, 0.009136, 0.000326, 0.005205, 0.001446, 0.009329, 0.000633, 0.002757, 0.000315, 0.041303, 0.048717, 0.006843, 0.058208, 0.005456, 0.005695, 0.006768, 0.071185, 0.001388, 0.004615, 0.009506, 0.00168, 0.02792, 0.014743, 0.011667, 0.018229, 0.0025, 0.033378, 0.003154, 0.019193, 0.06117, 0.001804, 0.001136, 0.000174]
Y_pred = [0.000821, 0.001415, 0.001628, 0.000621, 0.00177, 0.005572, 0.001289, 0.011301, 0.007276, 0.000692, 0.002649, 0.000771, 0.000861, 0.000604, 0.004882, 0.002182, 0.001007, 0.000366, 0.000747, 0.000552, 0.006569, 0.003595, 0.006667, 0.003593, 0.00547, 0.001524, 0.009019, 0.001191, 0.008354, 0.005932, 0.003575, 0.006007, 0.006289, 0.000628, 0.004421, 0.005028, 0.00175, 0.001085, 0.004612, 0.00074, 0.014444, 0.016596, 0.002796, 0.004198, 0.01869, 0.006981, 0.002882, 0.016, 0.001977, 0.002625, 0.012585, 0.003837, 0.025114, 0.006518, 0.004609, 0.005946, 0.001438, 0.017375, 0.002557, 0.004742, 0.020397, 0.004453, 0.010165, 0.000552]
MAPE = [1.345714286, 0.3858961802, 0.3653021442, 0.6515957447, 0.3575317604, 0.8244154535, 0.1336851363, 0.3847452091, 0.3811693242, 0.05464480874, 0.749976404, 1.056, 4.55483871, 2.337016575, 0.005905110975, 0.48911262, 0.2760603882, 2.388888889, 0.1457055215, 2.190751445, 15.50502513, 0.3091769847, 4.792354474, 3.212192263, 7.822580645, 1.627586207, 0.1865544007, 0.602960969, 2.541331072, 0.752437223, 0.6539206196, 0.7165038463, 0.3116243433, 0.9263803681, 0.1506243996, 2.477178423, 0.812412906, 0.7140600316, 0.6728327893, 1.349206349, 0.6502917464, 0.6593386292, 0.5914072775, 0.9278793293, 2.42558651, 0.2258121159, 0.5741725768, 0.7752335464, 0.424351585, 0.4312026002, 0.3239006943, 1.283928571, 0.1005014327, 0.5578918809, 0.6049541442, 0.6738164463, 0.4248, 0.4794475403, 0.1892834496, 0.752930756, 0.6665522315, 1.468403548, 7.94806338, 2.172413793]

### Visualize the distribution of Y_train and Y_val
fig = plt.figure(figsize=(12, 6))
_fig_base = fig_base(9, row_first=True)

def metric_elementwise_se(Y_pred, Y):
    return np.power(Y_pred-Y, 2)

def metric_elementwise_ae(Y_pred, Y):
    return Y_pred-Y

Y_pred = np.array(Y_pred)
Y = np.array(Y)
ape = metric_elementwise_mape(Y_pred, Y)

_fig_base += 1
ax = fig.add_subplot(_fig_base) 
plt.title("Y to Absolute Percentage Error\nsample schedules from Tenset for tasks in ResNet-50")
ax.scatter(Y[0:20], ape[0:20], label="sampled, BS=1", alpha=0.3)
ax.scatter(Y[20:40], ape[20:40], label="sampled, BS=4", alpha=0.3)
ax.scatter(Y[40:], ape[40:], label="sampled, BS=8", alpha=0.3)
plt.xlabel("Y")
plt.ylabel("APE")
plt.ylim(0, 5)
plt.legend()

plt.tight_layout()
plt.savefig("tmp1.png")